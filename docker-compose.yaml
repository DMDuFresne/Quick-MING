
version: "3.8"

x-default-logging:
  &default-logging
  logging:
    options:
      max-size: '100m'
      max-file: '5'
    driver: json-file

services:

  # Mosquitto - MQTT Broker
  mosquitto:
    <<: *default-logging
    build: ./mosquitto
    image: workorder-mosquitto
    container_name: workorder-mosquitto
    hostname: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - workorder-network
    volumes:
      - mosquitto-config:/mosquitto/config:rw
      - mosquitto-data:/mosquitto/data:rw
      - mosquitto-log:/mosquitto/log:rw
    environment:
      MOSQUITTO_USERNAME: ${MOSQUITTO_USERNAME:-admin}
      MOSQUITTO_PASSWORD: ${MOSQUITTO_PASSWORD:-password}

  # Node Red - Low Code Platform
  nodered:
    <<: *default-logging
    build: ./node-red
    restart: unless-stopped
    container_name: workorder-frontend
    hostname: frontend
    ports:
      - 1880:1880
    networks:
      - workorder-network
    volumes:
      - nodered-data:/data
    environment:
      TZ: ${TIMEZONE}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}

  # Postgres - SQL Database
  postgres:
    <<: *default-logging
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: unless-stopped
    container_name: workorder-database
    hostname: database
    ports:
      - "5432:5432"
    networks:
      - workorder-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iiot}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_USER:-admin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d

volumes:

  mosquitto-data:
  mosquitto-config:
  mosquitto-log:
  nodered-data:
  postgres_data:

networks:
  workorder-network:
